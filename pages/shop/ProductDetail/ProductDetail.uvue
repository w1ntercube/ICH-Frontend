<template>
  <view class="product-detail">
    <!-- 商品图片区域 -->
    <view class="product-image-container">
      <image :src="product.imageURL || '/static/images/商品图1.png'" class="product-image" mode="aspectFill" />
      <view class="product-price-tag">￥{{ product.price }}</view>
    </view>

    <!-- 商品信息 -->
    <view class="product-info">
      <text class="product-title">商品名称：{{ product.title }}</text>
      <text class="product-source">商品来源：<text class="source-name">{{ product.typeName }}</text></text>
      <text class="product-description">{{ product.description }}</text>
    </view>

    <!-- 购买按钮 -->
    <view class="product-footer">
      <button class="buy-btn" @click="goToBuy">点击购买</button>
    </view>
  </view>
</template>

<script>
export default {
  data() {
    return {
	  productId:null,
      product: {} // 用于存储商品数据
    };
  },
  onLoad(options) {
	  console.log("接productId：", options.productId);
    if (options.productId) {
		console.log("接收到的 productId：", options.productId); // 打印接收到的字符串
		this.getProductDetail(options.productId);
	
    }
  },
  methods: {
	async getProductDetail(productId) {
		console.log("prd",productId)
		this.productId=productId
		try {
		  const url = `http://localhost:8080/api/products/${this.productId}/byId` 
		  const response = await fetch(url)
		  const result = await response.json()
		  this.types = result.data
		  console.log("获取成功:", result.data)
		  // 默认选中第一个分类并加载商品
		  this.product=result.data
		} catch (error) {
		  console.error("获取失败:", error)
		  uni.showToast({
		    title: '获取失败',
		    icon: 'none'
		  })
		}
	},
    goToBuy() {
		if (this.product.salesURL) {
			console.log("链接", this.product.salesURL);
			// 在 H5 环境下，直接跳转到外部链接
			window.location.href = this.product.salesURL;
		  } else {
			uni.showToast({
			  title: "暂无购买链接",
			  icon: "none"
			});
		  }
    }
  }
};
</script>

<style scoped>
.product-detail {
  padding: 20rpx;
  background-color: #fef5e7;
}

.product-image-container {
  position: relative;
  text-align: center;
}

.product-image {
  width: 100%;
  height: 300rpx;
  border-radius: 20rpx;
  box-shadow: 0 5rpx 10rpx rgba(0, 0, 0, 0.1);
}

.product-price-tag {
  position: absolute;
  bottom: 10rpx;
  right: 20rpx;
  background-color: #ff4400;
  color: #fff;
  padding: 5rpx 10rpx;
  font-size: 24rpx;
  border-radius: 10rpx;
}

.product-info {
  margin-top: 20rpx;
  padding: 20rpx;
  background-color: #fff;
  border-radius: 20rpx;
  box-shadow: 0 5rpx 10rpx rgba(0, 0, 0, 0.05);
}

.product-title {
  font-size: 32rpx;
  font-weight: bold;
  color: #333;
  margin-bottom: 10rpx;
}

.product-source {
  font-size: 24rpx;
  color: #666;
  margin-bottom: 20rpx;
}

.source-name {
  color: #ff6600;
}

.product-description {
  font-size: 26rpx;
  color: #444;
  line-height: 36rpx;
}

.product-footer {
  margin-top: 30rpx;
  text-align: center;
}

.buy-btn {
  background-color: #ff6600;
  color: #fff;
  font-size: 28rpx;
  padding: 15rpx 40rpx;
  border-radius: 50rpx;
  border: none;
  box-shadow: 0 5rpx 10rpx rgba(255, 102, 0, 0.2);
}
</style>
