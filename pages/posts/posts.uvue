<template>
  <div class="container">
    <!-- 搜索栏 -->
    <div class="search-bar">
      <div class="search-icon">
        <img src="/static/images/search-icon.png" alt="搜索图标" class="icon" />
      </div>
      <input
        type="text"
        class="search-input"
        v-model="searchQuery"
        placeholder="搜索帖子标题..."
        @input="filterPosts"
      />
    </div>

    <!-- 新建帖子按钮 -->
    <div class="create-post">
      <button class="create-button" @click="goToCreatePost">
        <img src="/static/images/edit.png" alt="新建帖子" class="create-icon" />
        新建帖子
      </button>
    </div>

    <!-- 帖子列表 -->
    <div class="post-list">
      <div
        v-for="post in filteredPosts"
        :key="post.id"
        class="post-card"
        @click="goToPostDetail(post.postId)"
      >
        <div class="post-image-container">
            <img :src="post.imageUrl" alt="帖子图片" class="post-image" />
        </div>
        <div class="post-info">
			<h3 class="post-title">{{ post.title }}</h3>
          <div class="user-info">
              <img 
                :src="post.profilePicture" 
                alt="用户头像" 
                class="user-image"
                :style="{ borderColor: post.role === 'HERITAGE_INHERITOR' ? '#FFD700' : '#C0C0C0' }"
              />
               <span 
                  class="user-name"
                  :style="{ color: post.role === 'HERITAGE_INHERITOR' ? '#FFD700' : '#808080' }"
                >
                  {{ post.userName }}
                </span>
			  <div class="post-stats">
			    <span class="stat-item">
			      <img src="/static/images/like.png" class="icon" /> {{ post.likes }}
			    </span>
			    <span class="stat-item">
			      <img src="/static/images/comment.png" class="icon" /> {{ post.comments }}
			    </span>
			  </div>
            </div>
          
		  
        </div>
		
      </div>
    </div>
  </div>
</template>


<script>
export default {
  data() {
    return {
      searchQuery: "", // 搜索关键字
      posts: [], // 原始帖子数据
      filteredPosts: [], // 筛选后的帖子数据
    };
  },
  methods: {
    // 从后端获取帖子数据
    async fetchPosts() {
      try {
        const response = await fetch("http://localhost:8080/api/post/profile"); 
        const data = await response.json();
        this.posts = data;
        this.filteredPosts = data;
		console.log("posts:",this.posts)
      } catch (error) {
        console.error("获取帖子失败:", error);
      }
    },
    // 根据搜索关键字筛选帖子
    filterPosts() {
      const query = this.searchQuery.trim().toLowerCase();
      this.filteredPosts = this.posts.filter((post) =>
        post.title.toLowerCase().includes(query)
      );
    },
    // 跳转到帖子详情
    goToPostDetail(postId) {
      uni.navigateTo({
        url: `/pages/posts/postDetail/postDetail?postId=${postId}`,
      });
    },
    // 跳转到新建帖子页面
    goToCreatePost() {
      uni.navigateTo({
        url: "/pages/posts/createPost/createPost", // 替换为实际的页面路径
      });
    },
  },
  // 组件挂载时调用数据获取方法
  mounted() {
    this.fetchPosts();
  },
};
</script>


<style>
.container {
  padding: 20px;
  background-color: #fffaf2;
  font-family: Arial, sans-serif;
}

.search-bar {
  display: flex;
  flex-direction: row;
  align-items: center;
  width: 90%;
  height: 40px;
  margin: 10px 0;
  padding: 0 10px;
  background-color: #fff;
  border-radius: 20px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.search-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  margin-right: 8px;
}

.search-icon .icon {
  width: 20px;
  height: 20px;
}

.search-input {
  flex: 1;
  height: 100%;
  border: none;
  outline: none;
  font-size: 14px;
  color: #333;
}

.post-list {
  display: flex;
  flex-direction: column;
  gap: 20px;
  padding: 10px;
}

.post-card {
  width: 100%; /* 控制卡片宽度 */
  display: flex;
  flex-direction: column; /* 改为垂直排列 */
  background: #fff;
  border-radius: 15px;
  overflow: hidden;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
  padding-bottom: 5px;
}

.post-image-container {
  width: 100%;
  height: 40%; /* 图片区域占 60% */
}
.post-image {
  width: 100%; /* 图片宽度相对于卡片 */
  height: 180px; /* 固定高度 */
  object-fit: cover;
  border-radius: 0px; /* 图片圆角 */
}

.user-info {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 10px; /* 头像和用户名之间的间距 */
}

.user-image {
  width: 30px; /* 减小头像尺寸 */
  height: 30px;
  border-radius: 50%; /* 圆形头像 */
  border: 2px solid; /* 边框宽度 */
  object-fit: cover;
}
.post-info {
  width: 90%; /* 文字信息区域宽度 */
  display: flex;
  flex-direction: column;
  align-items: center; /* 文字居中 */
  
}
.user-name {
  font-size: 14px;
  color: #666;
  font-weight: normal; 
}

.post-title {
  font-size: 16px;
  color: #8B4513; /* 棕色 */
  font-weight:normal;
  text-align: center;
  margin:8px;
  padding-left: 10px;
}

.post-stats {
  display: flex;
  justify-content: center; /* 统计信息居中 */
  gap: 20px;
  color: #666;
  margin-left: 40px;
}

.stat-item {
  display: flex;
  align-items: center;
  gap: 5px;
  margin-bottom: 5px;
}

.icon {
  width: 18px;
  height: 18px;
}
.create-post {
  display: flex;
  justify-content: center; /* 居中对齐 */
  margin: 15px 0; /* 添加上下边距 */
}
.create-button {
  display: flex;
  align-items: center; /* 图标和文字垂直居中 */
  padding: 10px 20px; /* 内边距 */
  color: black; /* 按钮文字颜色 */
  border: none; /* 去掉边框 */
  border-radius: 20px; /* 圆角边框 */
  font-size: 12px; /* 文字大小 */
  cursor: pointer; /* 鼠标样式 */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* 阴影效果 */
}
</style>
