<template>
  <div class="comments-container">
	  <div class="create-comment">
	    <button class="create-button" @click="goToAddCommentPage">
	      <img src="/static/images/edit.png" alt="新建帖子" class="create-icon" />
	      新建评论
	    </button>
	  </div>
    <!-- 评论内容 -->
    <div class="comments-list">
      <div class="comment" v-for="comment in comments" :key="comment.commentId">
        <p class="comment-content">{{ comment.content }}</p>
        <p class="comment-info">
          <span class="comment-user">{{ comment.userName }}</span>
		  &nbsp;
		  &nbsp;
          <span class="comment-time">{{ comment.createdAt }}</span>
        </p><!-- 添加分隔线 -->
      </div>
    </div>
  </div>
</template>

<script>
export default {
  data() {
    return {
      postId: null, // 动态加载的 postId
      comments: [], // 评论数据
    };
  },
  onLoad(query) {
    this.postId = query.postId;
  },

  methods: {
    // 获取评论数据
    async fetchComments() {
      try {
        const response = await fetch(
          `http://localhost:8080/api/comment/${this.postId}`
        );
        const data = await response.json();
        this.comments = data; // 将获取到的评论数据赋值给 comments
        console.log(this.comments); // 打印评论数据，方便调试
      } catch (error) {
        console.error("获取评论失败", error);
      }
    },
	goToAddCommentPage() {
	uni.navigateTo({
	  url: `/pages/posts/comment/createComment?postId=${this.postId}`, // 确保拼接正确
	});
	},
  },

  mounted() {
    this.fetchComments();
  },
};
</script>

<style scoped>
.comments-container {
  max-width: 100%; /* 使用100%宽度 */
  margin: 0 auto;
  padding: 20px;
  font-family: Arial, sans-serif;
  color: #333;
}

.comments-list {
  display: flex;
  flex-direction: column;
  gap: 15px; /* 调整评论之间的间距 */
}

.comment {
  padding: 12px 16px; /* 调整内边距 */
  background: #fff; /* 去掉背景颜色变化 */
  border-radius: 8px;
  box-shadow: none; /* 去掉阴影 */
}

.comment-content {
  font-size: 14px; /* 调整字体大小 */
  margin-bottom: 8px;
  color: #444;
}

.comment-info {
  font-size: 12px; /* 调整字体大小 */
  color: #777;
  display: flex;
  justify-content: space-between;
}

.comment-user {
  font-weight: bold;
}

.comment-time {
  font-style: italic;
}

.comment-divider {
  border: 0;
  height: 1px;
  background-color: #e0e0e0; /* 设置分隔线颜色 */
  margin: 10px 0;
}

.add-comment-button {
  display: inline-block;
  padding: 10px 15px;
  margin-bottom: 20px;
  background-color: lightgray;
  color: #fff;
  font-size: 14px;
  font-weight: bold;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  text-align: center;
}

.add-comment-button:hover {
  background-color: grey;
}
.create-comment {
  display: flex;
  justify-content: center; /* 居中对齐 */
  margin: 20px 0; /* 添加上下边距 */
}
.create-button {
  display: flex;
  align-items: center; /* 图标和文字垂直居中 */
  padding: 5px 20px; /* 内边距 */
  color: black; /* 按钮文字颜色 */
  border: none; /* 去掉边框 */
  border-radius: 20px; /* 圆角边框 */
  font-size: 12px; /* 文字大小 */
  cursor: pointer; /* 鼠标样式 */
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2); /* 阴影效果 */
  margin-top: -15px;
}
</style>
