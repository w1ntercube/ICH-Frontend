<template>
  <div class="create-post-container">
    <h2>发布帖子</h2>

    <!-- 上传图片 -->
    <div class="form-group">
      <label>上传图片</label>
      <button class="upload-button" @click="triggerFileInput">选择图片</button>
      <input type="file" id="image-upload" ref="fileInput" @change="handleFileChange" hidden />
      <p v-if="selectedFile" class="file-name">已选择文件: {{ selectedFile.name }}</p>
    </div>

    <!-- 帖子标题 -->
    <div class="form-group">
      <label for="title">帖子标题</label>
      <input
        type="text"
        id="title"
        v-model="title"
        placeholder="请输入帖子标题"
      />
    </div>

    <!-- 帖子内容 -->
    <div class="form-group">
      <label for="content">帖子内容</label>
      <textarea
        id="content"
        v-model="content"
        placeholder="请输入帖子内容"
      ></textarea>
    </div>

    <!-- 提交按钮 -->
    <button class="submit-button" @click="submitPost">发布帖子</button>
  </div>
</template>

<script>
export default {
  data() {
    return {
      title: "", // 帖子标题
      content: "", // 帖子内容
      selectedFile: null, // 上传的图片文件
    };
  },
  methods: {
    // 触发文件选择框
    triggerFileInput() {
      this.$refs.fileInput.click();
    },
    // 处理文件上传
    handleFileChange(event) {
      const file = event.target.files[0];
      if (file) {
        this.selectedFile = file;
      }
    },
    // 提交帖子
    async submitPost() {
      if (!this.title || !this.content || !this.selectedFile) {
        alert("请填写所有字段并上传图片");
        return;
      }

      try {
        const formData = new FormData();
        formData.append("file", this.selectedFile);
        formData.append("title", this.title);
        formData.append("content", this.content);

        const token = uni.getStorageSync('token');
        if (!token) {
          alert("用户未登录，请先登录");
          return;
        }

        const response = await fetch("http://localhost:8080/api/post/createPost", {
          method: "POST",
          headers: {
            Authorization: `${token}`,
          },
          body: formData,
        });

        if (response.ok) {
          const data = await response.json();
          alert("帖子创建成功");
		  uni.navigateTo({
		      url: `/pages/posts/post`,
		    });
		  
          // 跳转到帖子详情页面或其他页面
          this.$router.push(`/posts/${data.id}`);
        } else {
          const error = await response.json();
          alert(`创建帖子失败: ${error.message}`);
        }
      } catch (error) {
        console.error("提交失败:", error);
        alert("创建帖子时发生错误，请稍后再试");
      }
    },
  },
};
</script>

<style>
.create-post-container {
  max-width: 600px;
  margin: 50px auto;
  padding: 30px;
  background: #f9f9f9;
  border-radius: 12px;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  font-family: Arial, sans-serif;
  color: #333;
}

h2 {
  text-align: center;
  margin-bottom: 20px;
  color: ;
}

.form-group {
  margin-bottom: 20px;
}

label {
  display: block;
  font-weight: bold;
  margin-bottom: 8px;
  font-size: 16px;
}

input[type="text"],
textarea {
  width: 100%;
  padding: 12px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 6px;
  box-sizing: border-box;
}

textarea {
  height: 120px;
  resize: vertical;
}

.upload-button {
  display: inline-block;
  align-items: center;
  padding: 10px 15px;
  background-color: lightgray;
  color: #fff;
  font-size: 16px;
  font-weight: bold;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.upload-button:hover {
  background-color: grey;
}

.file-name {
  margin-top: 10px;
  font-size: 14px;
  color: #555;
}

.submit-button {
  display: block;
  width: 100%;
  padding: 15px;
  background-color: #28a745;
  color: #fff;
  font-size: 18px;
  font-weight: bold;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: background-color 0.3s;
}

.submit-button:hover {
  background-color: #218838;
}
</style>

